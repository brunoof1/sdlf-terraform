version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.7
  build:
    commands:
      - ls && echo "-----> making artifactory directory"
      - mkdir artifacts
      - zip -r artifacts/datalake_library.zip ./python -x \*__pycache__\*
      - account_id=$(aws sts get-caller-identity | jq .Account)
      - temp_role=$(aws sts assume-role --role-arn $LAMBDA_PUBLISHING_ROLE --role-session-name "codebuild-lambda-layer")
      - export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
      - export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
      - export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
      - layer=$(aws lambda publish-layer-version --layer-name sdlf-$TEAM_NAME-$LAYER_NAME --description "Contains the latest version of datalake_library" --compatible-runtimes "python3.6" "python3.7" --zip-file fileb://./artifacts/datalake_library.zip)
      - latest_layer_version=$(echo $layer | jq -r .LayerVersionArn)
      - aws ssm put-parameter --name "/SDLF/Lambda/$TEAM_NAME/LatestDatalakeLibraryLayer" --value $latest_layer_version --type String --overwrite
